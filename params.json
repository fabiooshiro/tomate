{"name":"Tomate","body":"# Tomate\r\n\r\nTomate is a <a href=\"http://grails.org\">Grails</a> plugin for javascript testing.\r\nUsing <a href=\"http://pivotal.github.com/jasmine/\">jasmine.js</a> and ace.js\r\n\r\n## Target\r\n\r\n1. Export results to CI\r\n2. Smooth learning curve (<a href=\"http://jquery.com/\">jQuery</a> and <a href=\"http://pivotal.github.com/jasmine/\">Jasmine</a>)\r\n3. Code and Run (not code compile wait Zzzz.. and run)\r\n4. Browser powered debug tools. eg. firebug, chrome\r\n5. Some page navigation (<a href=\"https://github.com/fabiooshiro/cabral\">Cabral</a>)\r\n\r\nSample project here: '<a href=\"https://github.com/fabiooshiro/how-to-tomate\">how-to-tomate</a>'.\r\n\r\n## QuickStart\r\n\r\n```sh\r\ngit clone git://github.com/fabiooshiro/tomate.git\r\ngit clone git://github.com/fabiooshiro/how-to-tomate.git\r\ncd how-to-tomate\r\ngrails run-app\r\n\r\n```\r\n\r\nOpen <a href=\"http://localhost:8080/how-to-tomate/tomate/welcome\">http://localhost:8080/how-to-tomate/tomate/welcome</a>\r\n\r\nAnd start coding your test!\r\n\r\nNew files will be filled with a sample code like:\r\n\r\n```javascript\r\ndescribe(\"Some feature\", function() { // just jasmine\r\n    it(\"should do something\", function() { // just jasmine\r\n        var done = false;\r\n        var jQuery, matches;\r\n        runs(function(){\r\n            cabral.navigateTo('/book/create', function($){ // cabral navigation\r\n                $('#title').val(\"my book title\"); // just jquery\r\n                $('#create').click(); // just jquery\r\n                cabral.waitFor(/\\/book\\/show\\/(.*)/g, function($, m){\r\n                    jQuery = $; // keep last jQuery from show.gsp\r\n                    matches = m; // if you need the id ...\r\n                    done = true;\r\n                });\r\n            });\r\n        });\r\n        \r\n        // jasmine timeout to exec navigation\r\n        waitsFor(function() {\r\n            return done;\r\n        }, 'navigation time out', 30000);\r\n\r\n        runs(function(){\r\n            expect(\r\n                jQuery('.message')[0].innerHTML\r\n            ).toMatch(/Book .* created/g);\r\n        });\r\n    });\r\n});\r\n```\r\n\r\n## Continuous Integration - CI\r\n\r\nThere is a grails script using phantomjs\r\n```sh\r\ngrails phantom-tomate\r\n```\r\n\r\n### Spring Security Integration\r\n\r\nYou can configure an url to post user and pass\r\n```groovy\r\n// Tomate auth configuration\r\ntomate.auth.uri2post='/j_spring_security_check'\r\ntomate.auth.j_username = 'tester'\r\ntomate.auth.j_password = 'tester'\r\n```\r\n\r\nBefore every test file the tomate will post to '/j_spring_security_check' the username and password.\r\nIf you have your own auth code you can modify the params to be posted.\r\n\r\n```groovy\r\n// Tomate auth configuration\r\ntomate.auth.uri2post='/user/chkpass'\r\ntomate.auth.myUsername = 'tester'\r\ntomate.auth.myPassword = 'tester'\r\n```\r\n\r\n\r\n\r\n","tagline":"Tomate","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}